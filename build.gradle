buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16'
        classpath 'io.spring.asciidoctor:spring-asciidoctor-extensions:0.1.3.RELEASE'
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '2.4.0'
    id 'de.undercouch.download' version '4.0.0'
}

description = "sample"

ext {

    moduleProjects = subprojects.findAll { it.name.startsWith("spring-") }
    javaProjects = subprojects

    //================= framework =================
    springCloudVersion = "Hoxton.RELEASE"
    springCloudAlibabaVersion = "2.2.0.RELEASE"
    mybatisPlusStarterVersion = "3.3.1"
    txLcnVersion = "5.0.2.RELEASE"
    quartzVersion = "2.3.2"
    SpringVersion = "5.2.5.RELEASE"
    injectVersion = "1"
    servletVersion = "4.0.0"

    //================= Swagger =================
    swaggerModelsVersion = "1.5.21"
    swaggerVersion = "2.9.2"
    swaggerUIVersion = "1.9.4"


    //================= datasource ================
    flywayVersion = "6.0.8"
    druidStarterVersion = "1.1.21"
    mysqlConnectorJavaVersion = "8.0.16"
    c3p0Version = "0.9.1.2"
    mysqlVersion = "8.0.18"

    //=================json=======================
    fastjsonVersion = "1.2.62"
    gsonVersion = "2.8.6"
    jjwtVersion = "0.9.1"

    //=================cache=======================
    ehcacheVersion = "2.10.6"

    //=================httpclient=================
    httpclientVersion = "4.5.10"
    OkHttpVersion = "3.14.4"

    //=================Disruptor=================
    disruptorVersion = "3.4.2"

    //=================aliyun=====================
    aliyunSdkVersion = "4.0.3"
    aliyunSdkdysmsapiVersion = "1.1.0"

    //=================minio=====================
    minioVersion = "6.0.7"
    qiniuVersion = "7.2.23"

    //================= tools====================
    tomcatJdbcVersion = "8.5.31"
    GuavaVersion = "26.0-jre"
    validationApiVersion = "2.0.1.Final"
    protostuffVersion = "1.6.0"
    curatorVersion = "4.0.1"
    jacksonVersion = "2.10.2"
    jacksonDataformatYamlVersion="2.9.8"
    commonLang3Version = "3.9"
    commonsBeanutilsVersion = "1.9.3"
    zxingVersion = "3.3.3"
    jschVersion = "0.1.54"
    codecVersion = "1.14"
    commonsIoVersion = "2.6"
    fileuploadVersion = "1.4"
    libphonenumberVersion = "8.12.1"
    antVersion = "1.10.7"
    mailVersion= "1.6.2"
    UserAgentUtilsVersion= "1.20"


    //================= test ====================
    h2Version = "1.4.197"
    junit5Version = "5.6.0"

    //================= artifactRepoBase ====================
    artifactRepoBase = ""
    deployUsername = ""
    deployPassword = ""

    logstashVersion = "6.3"
    janinoVersion = "3.1.0"
}

configure(allprojects ) { allprojects ->
    apply plugin: 'java'
    apply plugin: 'maven-publish'


    group = 'com.jcohy.sample'
    version = '0.1.0'

    repositories {

        maven {
            url 'https://maven.aliyun.com/nexus/content/groups/public/'
        }

        maven {
            url = 'https://repo.spring.io/libs-milestone'
        }

        maven {
            url 'https://repo.spring.io/snapshot/'
        }

        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }

        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }

        mavenLocal()
    }

}

configure(subprojects){subproject ->
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'


    repositories {

        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }

        maven {
            url = 'https://repo.spring.io/libs-milestone'
        }

        maven {
            url 'https://repo.spring.io/snapshot/'
        }

        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }

        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }

        mavenLocal()
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }
    dependencies{
        compile "org.springframework.boot:spring-boot-starter-aop"
        compile "org.springframework.boot:spring-boot-configuration-processor"
        compile "org.springframework.retry:spring-retry"
        compile "org.springframework.boot:spring-boot-starter-actuator"
        runtime "org.springframework.boot:spring-boot-devtools"
        // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
        testCompile "org.junit.platform:junit-platform-commons:1.5.2"
        testCompile "org.springframework.boot:spring-boot-starter-test"
        testCompile "org.assertj:assertj-core:3.15.0"
    }

    configurations {
        //compile.exclude module: 'spring-boot-starter-tomcat'

        //compile.exclude module: 'spring-boot-starter-logging'
        // exclude transitive dependencies log4j1.x
        //compile.exclude group: 'log4j', module: 'log4j'
        // exclude this to avoid multiple binding
        //compile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    compileJava {
        sourceCompatibility = 1.8  // can be switched to 11 for testing
        targetCompatibility = 1.8
        options.encoding = "UTF-8"
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }
}

configure([rootProject] + javaProjects) { project ->
    group = "jcohy.study.sample"

    ext.javadocLinks = [
            "https://docs.oracle.com/javase/8/docs/api/",
            "https://docs.oracle.com/javaee/7/api/",
            "https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/",  // CommonJ
            "https://www.ibm.com/support/knowledgecenter/SS7JFU_8.5.5/com.ibm.websphere.javadoc.doc/web/apidocs/",
            "https://glassfish.java.net/nonav/docs/v3/api/",
            "https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/",
            "https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/",
            "https://tiles.apache.org/tiles-request/apidocs/",
            "https://tiles.apache.org/framework/apidocs/",
            "https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/",
            "https://www.ehcache.org/apidocs/2.10.4",
            "https://www.quartz-scheduler.org/api/2.3.0/",
            "https://fasterxml.github.io/jackson-core/javadoc/2.10/",
            "https://fasterxml.github.io/jackson-databind/javadoc/2.10/",
            "https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.10/",
            "https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/",
            "https://junit.org/junit5/docs/5.5.2/api/"
    ] as String[]
}

configure(rootProject) {
    description = "Jcohy Document"
    apply plugin: "org.asciidoctor.jvm.convert"
    apply from: "${rootDir}/gradle/docs.gradle"


//    publishing {
//        publications {
//            mavenJava(MavenPublication) {
//                artifact docsZip
//                artifact schemaZip
//                artifact distZip
//            }
//        }
//    }
}